CREATE TABLE Artists (artistId int NOT NULL, artistName varchar(250) CHARACTER SET utf8 COLLATE UTF8_GENERAL_CI NOT NULL, artistPrimaryGenre varchar(250) CHARACTER SET utf8 COLLATE UTF8_GENERAL_CI NOT NULL, PRIMARY KEY(artistId));
CREATE TABLE Users (userName varchar(250) CHARACTER SET utf8 COLLATE UTF8_GENERAL_CI NOT NULL, userPassword varchar(250) CHARACTER SET utf8 COLLATE UTF8_GENERAL_CI NOT NULL, userFirstName varchar(250) CHARACTER SET utf8 COLLATE UTF8_GENERAL_CI, userLastName varchar(250) CHARACTER SET utf8 COLLATE UTF8_GENERAL_CI NOT NULL, userCountry varchar(250) CHARACTER SET utf8 COLLATE UTF8_GENERAL_CI NOT NULL, userGender varchar(250) CHARACTER SET utf8 COLLATE UTF8_GENERAL_CI NOT NULL, userAge int NOT NULL, playlistPrivacy INT NOT NULL, PRIMARY KEY(userName));
CREATE TABLE Collections (collectionId int NOT NULL, collectionName varchar(250) CHARACTER SET utf8 COLLATE UTF8_GENERAL_CI NOT NULL, collectionReleaseDate Date NOT NULL, collectionPrice int NOT NULL, country varchar(250) CHARACTER SET utf8 COLLATE UTF8_GENERAL_CI NOT NULL, collectionGenre varchar(250) CHARACTER SET utf8 COLLATE UTF8_GENERAL_CI NOT NULL, numberOfTracks int NOT NULL, PRIMARY KEY(collectionId));
CREATE TABLE CollectionsArtist (indexm int NOT NULL AUTO_INCREMENT, collectionId int NOT NULL, artistId int NOT NULL, FOREIGN KEY(collectionId) REFERENCES Collections(collectionId), FOREIGN KEY(artistId) REFERENCES Artists(artistId), PRIMARY KEY(indexm));
CREATE TABLE Songs (trackId int NOT NULL, trackName varchar(250) CHARACTER SET utf8 COLLATE UTF8_GENERAL_CI NOT NULL, collectionId int NOT NULL, discNumber int NOT NULL, trackPosition int NOT NULL, trackReleaseDate Date NOT NULL, trackTimeMillis int NOT NULL, trackGenre varchar(250) CHARACTER SET utf8 COLLATE UTF8_GENERAL_CI NOT NULL, trackPrice int NOT NULL, FOREIGN KEY(collectionId) REFERENCES Collections(collectionId), PRIMARY KEY (trackId));
CREATE TABLE TrackUser(trackId int NOT NULL, userName varchar(250) CHARACTER SET utf8 COLLATE UTF8_GENERAL_CI NOT NULL, numberOfViews int NOT NULL, ranking int NOT NULL, isInPlaylist INT NOT NULL, FOREIGN KEY (trackId) REFERENCES Songs(trackId), FOREIGN KEY (userName) REFERENCES Users(userName), PRIMARY KEY(trackId, userName));
CREATE TABLE ArtistUser (artistId int NOT NULL, userName varchar(250) CHARACTER SET utf8 COLLATE UTF8_GENERAL_CI NOT NULL, artistRanking int NOT NULL, FOREIGN KEY (artistId) REFERENCES Artists(artistId), FOREIGN KEY (userName) REFERENCES Users(userName));